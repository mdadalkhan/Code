/* w3.org & w3schools.org
 * 01. .class	.intro	Selects all elements with class="intro"
 * 02. .class1.class2	.name1.name2	Selects all elements with both name1 and name2 set within its class attribute
 * 03. .class1 .class2	.name1 .name2	Selects all elements with name2 that is a descendant of an element with name1
 * 04. #id	#firstname	Selects the element with id="firstname"
 * 05. *	*	Selects all elements
 * 06. element	p	Selects all <p> elements
 * 07. element.class	p.intro	Selects all <p> elements with class="intro"
 * 08. element,element	div, p	Selects all <div> elements and all <p> elements
 * 09. element>element	div > p	Selects all <p> elements where the parent is a <div> element
 * 10. element+element	div + p	Selects the first <p> element that is placed immediately after <div> elements
 * 11. element1~element2	p ~ ul	Selects every <ul> element that is preceded by a <p> element
 * 12. [attribute]	[target]	Selects all elements with a target attribute
 * 13. [attribute=value]	[target=_blank]	Selects all elements with target="_blank"
 * 14. [attribute~=value]	[title~=flower]	Selects all elements with a title attribute containing the word "flower"
 * 15. [attribute|=value]	[lang|=en]	Selects all elements with a lang attribute value starting with "en"
 * 16. [attribute^=value]	a[href^="https"]	Selects every <a> element whose href attribute value begins with "https"
 * 17. [attribute$=value]	a[href$=".pdf"]	Selects every <a> element whose href attribute value ends with ".pdf"
 * 18. [attribute*=value]	a[href*="w3schools"]	Selects every <a> element whose href attribute value contains the substring "w3schools"
 * 
 * 19. :active	a:active	Selects the active link
 * 20. ::after	p::after	Insert something after the content of each <p> element
 * 21. ::before	p::before	Insert something before the content of each <p> element
 * 22. :checked	input:checked	Selects every checked <input> element
 * 23. :default	input:default	Selects the default <input> element
 * 24. :disabled	input:disabled	Selects every disabled <input> element
 * 25. :empty	p:empty	Selects every <p> element that has no children (including text nodes)
 * 26. :enabled	input:enabled	Selects every enabled <input> element
 * 27. :first-child	p:first-child	Selects every <p> element that is the first child of its parent
 * 28. ::first-letter	p::first-letter	Selects the first letter of every <p> element
 * 29. ::first-line	p::first-line	Selects the first line of every <p> element
 * 30. :first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent
 * 31. :focus	input:focus	Selects the input element which has focus
 * 32. :fullscreen	:fullscreen	Selects the element that is in full-screen mode
 * 33. :hover	a:hover	Selects links on mouse over
 * 34. :in-range	input:in-range	Selects input elements with a value within a specified range
 * 35. :indeterminate	input:indeterminate	Selects input elements that are in an indeterminate state
 * 36. :invalid	input:invalid	Selects all input elements with an invalid value
 * 37. :lang(language)	p:lang(it)	Selects every <p> element with a lang attribute equal to "it" (Italian)
 * 38. :last-child	p:last-child	Selects every <p> element that is the last child of its parent
 * 39. :last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent
 * 40. :link	a:link	Selects all unvisited links
 * 41. ::marker	::marker	Selects the markers of list items
 * 42. :not(selector)	:not(p)	Selects every element that is not a <p> element
 * 43. :nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent
 * 44. :nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child
 * 45. :nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child
 * 46. :nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent
 * 47. :only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent
 * 48. :only-child	p:only-child	Selects every <p> element that is the only child of its parent
 * 49. :optional	input:optional	Selects input elements with no "required" attribute
 * 50. :out-of-range	input:out-of-range	Selects input elements with a value outside a specified range
 * 51. ::placeholder	input::placeholder	Selects input elements with the "placeholder" attribute specified
 * 52. :read-only	input:read-only	Selects input elements with the "readonly" attribute specified
 * 53. :read-write	input:read-write	Selects input elements with the "readonly" attribute NOT specified
 * 54. :required	input:required	Selects input elements with the "required" attribute specified
 * 55. :root	:root	Selects the document's root element
 * 56. ::selection	::selection	Selects the portion of an element that is selected by a user
 * 57. :target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)
 * 58. :valid	input:valid	Selects all input elements with a valid value
 * 59. :visited	a:visited	Selects all visited links
 * 60. The End
 * 
 * 
 */